# üîí Licensed under the GNU GPLv3
# üåê https://www.gnu.org/licenses/agpl-3.0.html
# meta developer: @VacuumCleanr

from .. import loader, utils
from telethon.tl.types import Message
from telethon.utils import get_display_name
import datetime
from time import strftime
import pprint

@loader.tds
class GenUL(loader.Module):
    """–ò–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏"""

    strings = {'name': 'VacuumClnr.Tools'}
  
    async def listview(self, list):
        i = 0
        cusers = len(list)
        listview = f' ‚ï≠Ô∏é üóÇ <b>–°–ø–∏—Å–æ–∫ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤:</b>\n'
        for user in list:
           i += 1
           if cusers == i: listview += f' ‚ï∞Ô∏é <b>{i}</b>. {user}\n' # footer
           else: listview += f' ‚îúÔ∏é <b>{i}</b>. {user}\n' # middle 
        return listview   
        
    @loader.unrestricted
    async def ulcmd(self, m: Message):
        """ - –≥–µ–Ω–µ—Ä–∞—Ü–∏—è —Å–ø–∏—Å–∫–∞ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ –¥–ª—è —Ä—É–ª–µ—Ç–∫–∏
           ‚Ä¢ <reply> - –Ω—É–∂–Ω–æ –æ—Ç–≤–µ—Ç–∏—Ç—å –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∫–æ—Ç–æ—Ä–æ–≥–æ –±—É–¥–µ—Ç –Ω–∞—á–∏–Ω–∞—Ç—å—Å—è –ø–∞—Ä—Å–∏–Ω–≥ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
           ‚Ä¢ [max_users] - –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –≤ —Å–ø–∏—Å–∫–µ, –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é: 100
           #–ü—Ä–∏–º–µ—Ä, —Å–ø–∏—Å–æ–∫ –Ω–∞ 25 —á–µ–ª (–æ—Ç–≤–µ—Ç –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ): .ul 25 
           
           ‚ÄºÔ∏è –î–ª—è —É—á–∞—Å—Ç–∏—è –≤ –æ—Ç–±–æ—Ä–µ –Ω—É–∂–Ω–æ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –æ–¥–∏–Ω –∏–∑ —Å–ª–µ–¥—É—é—â–∏—Ö —Ç—Ä–∏–≥–≥–µ—Ä–æ–≤: 
             ¬´+¬ª, ¬´plus¬ª, ¬´–ø–ª—é—Å¬ª, ¬´‚ûï¬ª, ¬´üëç¬ª, ¬´‚úîÔ∏è¬ª, ¬´‚úÖ¬ª, ¬´‚òëÔ∏è¬ª
        """        
        max_users = 100 #default
        symbols_add = [
            '+',
            'plus',
            '–ø–ª—é—Å',
            '‚ûï',
            'üëç',
            '‚úîÔ∏è',
            '‚úÖ',
            '‚òëÔ∏è'
        ]
          
        usrlist = []
        args = utils.get_args(m)
        chatid = utils.get_chat_id(m)
        if args:
            try: max_users = int(args[0])
            except ValueError: pass

        if not m.chat:
            return await m.edit("<b>–≠—Ç–æ –Ω–µ —á–∞—Ç</b>")

        reply = await m.get_reply_message()
        if not reply: return await m.edit("–±–ª—è")
        else:
            c = 0
            lastmsg = []
            async for msg in m.client.iter_messages(chatid, offset_id = reply.id, reverse=True, limit = 400):
                if max_users == c: break
                lastmsg = msg
                try:
                    if str(msg.text).lower() in symbols_add:
                        user = get_display_name(msg.sender)
                        if msg.sender == None:
                            user = msg.post_author
                            uid = 0
                        else:
                            uid = msg.sender.id
                        if not user: user = m.chat.title
                        if not user in usrlist:
                            c += 1 
                            usrlist.append(user)
                            
                except AttributeError: continue
                except TypeError: continue
                except NameError:
                    c += 1
                    usrlist.append('* –ê–Ω–æ–Ω–∏–º –±–µ–∑ –¥–æ–ª–∂–Ω–æ—Å—Ç–∏')
                
        await utils.answer(m, await self.listview(usrlist))
